{"remainingRequest":"/Users/pulkit604/swt2/chatbotmanager/node_modules/babel-loader/lib/index.js!/Users/pulkit604/swt2/chatbotmanager/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pulkit604/swt2/chatbotmanager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pulkit604/swt2/chatbotmanager/src/components/botSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pulkit604/swt2/chatbotmanager/src/components/botSelect.vue","mtime":1595860640605},{"path":"/Users/pulkit604/swt2/chatbotmanager/node_modules/cache-loader/dist/cjs.js","mtime":1592329923983},{"path":"/Users/pulkit604/swt2/chatbotmanager/node_modules/babel-loader/lib/index.js","mtime":1592329923997},{"path":"/Users/pulkit604/swt2/chatbotmanager/node_modules/cache-loader/dist/cjs.js","mtime":1592329923983},{"path":"/Users/pulkit604/swt2/chatbotmanager/node_modules/vue-loader/lib/index.js","mtime":1592329973272}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlci5qcyc7CmltcG9ydCBDT05TVCBmcm9tICcuLi9jb25zdC5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiYm90U2VsZWN0IiwKICByb3V0ZXI6IHJvdXRlciwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYm90TGlzdDogWydhJywgJ2InLCAnYyddLAogICAgICBib3ROYW1lOiAnJywKICAgICAgcHVycG9zZTogJycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnb1RvQm90RWRpdDogZnVuY3Rpb24gZ29Ub0JvdEVkaXQobmFtZSkgewogICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogJ2VkaXQtYm90LzpuYW1lPScgKyBuYW1lCiAgICAgIH0pOwogICAgfSwKICAgIGNyZWF0ZUJvdDogZnVuY3Rpb24gY3JlYXRlQm90KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgZmV0Y2goQ09OU1QuQVBJX0hPU1QgKyAnP2NyZWF0ZV9ib3QnLCB7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgIH0sCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgbmFtZTogdGhpcy5ib3ROYW1lLAogICAgICAgICAgcHVycG9zZTogdGhpcy5wdXJwb3NlCiAgICAgICAgfSkKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZSA9PSAxKSBfdGhpcy5nb1RvQm90RWRpdChfdGhpcy5uYW1lKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["botSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,MAAA,MAAA,cAAA;AACA,OAAA,KAAA,MAAA,aAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,MAAA,EAAA,MAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,IADA,EACA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,oBAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AAAA;;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,QAAA,GAAA,aAAA,EAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA;AAAA,0BAAA;AAAA,SAFA;AAGA,QAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AACA,UAAA,IAAA,EAAA,KAAA,OADA;AAEA,UAAA,OAAA,EAAA,KAAA;AAFA,SAAA;AAHA,OAAA,CAAA,CAQA,IARA,CAQA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,IAAA,EAAA;AAAA,OARA,EASA,IATA,CASA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,IAAA,CAAA,EAAA,KAAA,CAAA,WAAA,CAAA,KAAA,CAAA,IAAA;AACA,OAXA;AAYA;AAjBA;AAVA,CAAA","sourcesContent":["<template>\n  <div>\n    <h2>Select your Bot or Create new</h2>\n    <div class=\"container\">\n      <div>Already existing</div>\n      <ul style=\"list-style: none\">\n        <li class=\"bot_list_item\" v-for=\"botName in botList\" :key=\"'existing_bot' + botName\"><div @click=\"goToBotEdit(botName)\">{{ botName }}</div></li>\n      </ul>\n      <div>Create New Bot</div>\n        <form>\n          <label>Bot Name</label>\n          <input v-model=\"botName\"/>\n          <label>Purpose</label>\n          <input v-model=\"purpose\"/>\n          <button @click=\"createBot()\">Create</button>\n        </form>\n    </div>\n  </div>\n</template>\n\n<script>\n  import router from '../router.js';\n  import CONST from '../const.js';\n    export default {\n        name: \"botSelect\",\n        router,\n        data() {\n            return {\n                botList: ['a', 'b', 'c'],\n              botName: '',\n              purpose: '',\n            };\n        },\n      methods: {\n        goToBotEdit(name){\n          router.push({ path: 'edit-bot/:name=' + name});\n        },\n        createBot() {\n          fetch( CONST.API_HOST + '?create_bot',  {\n            method : 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body   : JSON.stringify({\n              name: this.botName,\n              purpose: this.purpose,\n            })\n          })\n          .then(response => response.json())\n          .then(response => {\n            if(response == 1) this.goToBotEdit(this.name);\n          })\n        },\n      },\n    }\n</script>\n\n<style scoped>\n.bot_list_item {\n  color: aqua;\n}\n</style>"],"sourceRoot":"src/components"}]}