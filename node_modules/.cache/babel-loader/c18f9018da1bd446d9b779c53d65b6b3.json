{"remainingRequest":"/Users/pulkit604/swt2/chatbotmanager/node_modules/babel-loader/lib/index.js!/Users/pulkit604/swt2/chatbotmanager/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pulkit604/swt2/chatbotmanager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pulkit604/swt2/chatbotmanager/src/components/botEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pulkit604/swt2/chatbotmanager/src/components/botEdit.vue","mtime":1596140163509},{"path":"/Users/pulkit604/swt2/chatbotmanager/node_modules/cache-loader/dist/cjs.js","mtime":1592329923983},{"path":"/Users/pulkit604/swt2/chatbotmanager/node_modules/babel-loader/lib/index.js","mtime":1592329923997},{"path":"/Users/pulkit604/swt2/chatbotmanager/node_modules/cache-loader/dist/cjs.js","mtime":1592329923983},{"path":"/Users/pulkit604/swt2/chatbotmanager/node_modules/vue-loader/lib/index.js","mtime":1592329973272}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyLmpzJzsKaW1wb3J0IENPTlNUIGZyb20gIi4uL2NvbnN0IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJib3RFZGl0IiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd0dldFByb2plY3RTY3JpcHRCdXR0b246IGZhbHNlLAogICAgICBxdWVzdGlvbkJhbms6IFtdLAogICAgICB0YWJsZUNvbHM6IFt7CiAgICAgICAgZmllbGQ6ICdxdWVzdGlvbicsCiAgICAgICAgaGVhZGVyTmFtZTogJ1F1ZXN0aW9uJywKICAgICAgICBlZGl0YWJsZTogdHJ1ZSwKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICdhbnN3ZXInLAogICAgICAgIGhlYWRlck5hbWU6ICdBbnN3ZXInLAogICAgICAgIGVkaXRhYmxlOiB0cnVlLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH1dCiAgICB9OwogIH0sCiAgcm91dGVyOiByb3V0ZXIsCiAgY29tcHV0ZWQ6IHsKICAgIGJvdE5hbWU6IGZ1bmN0aW9uIGJvdE5hbWUoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5wYXJhbXMubmFtZTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVRvREI6IGZ1bmN0aW9uIHVwZGF0ZVRvREIoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBmZXRjaChDT05TVC5BUElfSE9TVCArICc/YWRkX3RvX2JvdCcsIHsKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgfSwKICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICBuYW1lOiB0aGlzLmJvdE5hbWUsCiAgICAgICAgICBxdWVzdGlvbkFuZEFuc3dlcnM6IHRoaXMucXVlc3Rpb25CYW5rCiAgICAgICAgfSkKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZSA9PSAxKSBfdGhpcy5zaG93R2V0UHJvamVjdFNjcmlwdEJ1dHRvbiA9IHRydWU7CiAgICAgIH0pOwogICAgfSwKICAgIGdldENpc2NvUHJvamVjdFNjcmlwdDogZnVuY3Rpb24gZ2V0Q2lzY29Qcm9qZWN0U2NyaXB0KCkge30sCiAgICBleHRyYWN0UXVlc3Rpb25CYW5rOiBmdW5jdGlvbiBleHRyYWN0UXVlc3Rpb25CYW5rKGUpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgZmlsZSA9IGUudGFyZ2V0LmZpbGVzWzBdOwogICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKCiAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkgewogICAgICAgIHJldHVybiBlLnRhcmdldC5yZXN1bHQuc3BsaXQoJ1xuJykuZm9yRWFjaChmdW5jdGlvbiAodikgewogICAgICAgICAgcmV0dXJuIF90aGlzMi5xdWVzdGlvbkJhbmsucHVzaCh7CiAgICAgICAgICAgIHF1ZXN0aW9uOiB2LnNwbGl0KCcsJylbMF0sCiAgICAgICAgICAgIGFuc3dlcjogdi5zcGxpdCgnLCcpWzFdCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfTsKCiAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyLWNvbnRlbnQnKS5jbGljaygpOwogICAgICB9LCAyMDAwKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["botEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,MAAA,MAAA,cAAA;AACA,OAAA,KAAA,MAAA,UAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,0BAAA,EAAA,KADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA,UAAA;AAAA,QAAA,UAAA,EAAA,UAAA;AAAA,QAAA,QAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA,EAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,UAAA,EAAA,QAAA;AAAA,QAAA,QAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,MAAA,EAAA,MATA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA;AACA;AAHA,GAVA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,QAAA,GAAA,aAAA,EAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA;AAAA,0BAAA;AAAA,SAFA;AAGA,QAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AACA,UAAA,IAAA,EAAA,KAAA,OADA;AAEA,UAAA,kBAAA,EAAA,KAAA;AAFA,SAAA;AAHA,OAAA,CAAA,CAQA,IARA,CAQA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,IAAA,EAAA;AAAA,OARA,EASA,IATA,CASA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,IAAA,CAAA,EAAA,KAAA,CAAA,0BAAA,GAAA,IAAA;AACA,OAXA;AAYA,KAdA;AAeA,IAAA,qBAfA,mCAeA,CAEA,CAjBA;AAkBA,IAAA,mBAlBA,+BAkBA,CAlBA,EAkBA;AAAA;;AACA,UAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AAEA,MAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,OAAA,CAAA,UAAA,CAAA;AAAA,iBAAA,MAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AAAA,YAAA,QAAA,EAAA,CAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AAAA,YAAA,MAAA,EAAA,CAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA;AAAA,WAAA,CAAA;AAAA,SAAA,CAAA;AAAA,OAAA;;AACA,MAAA,MAAA,CAAA,UAAA,CAAA,IAAA;AACA,MAAA,UAAA,CAAA,YAAA;AAAA,QAAA,QAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,KAAA;AAAA,OAAA,EAAA,IAAA,CAAA;AACA;AAzBA;AAfA,CAAA","sourcesContent":["<template>\n    <div>\n        <h1>BOT Edit: {{ botName }}</h1>\n        <h4>Add using CSV</h4>\n        <input id=\"file\" type=\"file\" accept=\".csv\" @change=\"extractQuestionBank\"/>\n        <h2>Question List</h2>\n        <vue-editable-grid\n            :column-defs=\"tableCols\"\n            ref=\"questionGrid\"\n            id=\"questionGrid\"\n            row-data-key=\"qID\"\n            :page-count=10\n            :row-data=\"questionBank\">\n            <template v-slot:header> Question Bank</template>\n        </vue-editable-grid>\n        <h3>Update To DB</h3>\n        <button @click=\"updateToDB()\">Update Database</button>\n        <br>\n        <button v-show=\"showGetProjectScriptButton\" @click=\"getCiscoProjectScript()\">Get Cisco Project Script</button>\n    </div>\n</template>\n\n<script>\n    import router from '../router.js';\n    import CONST from \"../const\";\n    export default {\n        name: \"botEdit\",\n        data() {\n            return {\n                showGetProjectScriptButton: false,\n                questionBank: [],\n                tableCols: [ { field: 'question', headerName: 'Question', editable: true, sortable: true }, { field: 'answer', headerName: 'Answer', editable: true, sortable: true}]\n            };\n        },\n        router,\n        computed: {\n          botName: function() {\n              return this.$route.params.name;\n          }\n        },\n        methods: {\n            updateToDB() {\n                fetch( CONST.API_HOST + '?add_to_bot',  {\n                    method : 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body   : JSON.stringify({\n                        name: this.botName,\n                        questionAndAnswers: this.questionBank,\n                    })\n                })\n                    .then(response => response.json())\n                    .then(response => {\n                        if(response == 1) this.showGetProjectScriptButton = true;\n                    })\n            },\n            getCiscoProjectScript() {\n\n            },\n            extractQuestionBank(e) {\n                const file = e.target.files[0];\n                const reader = new FileReader();\n\n                reader.onload = e => e.target.result.split('\\n').forEach(v => this.questionBank.push({ question: v.split(',')[0], answer: v.split(',')[1]}));\n                reader.readAsText(file);\n                setTimeout(() => { document.querySelector('.header-content').click(); }, 2000);\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}